{"version":3,"sources":["TodoItem.js","Todo.js","AddForm.js","Alert.js","App.js","index.js"],"names":["TodoItem","item","onDelete","onEdit","id","task","day","className","onClick","Todo","allTasks","onRemove","map","length","AddForm","onAdd","editItem","editing","useState","setTask","setDay","useEffect","onSubmit","e","preventDefault","type","value","onChange","target","Alert","msg","removeAlert","allItems","timeout","setTimeout","clearTimeout","App","localStorage","getItem","JSON","parse","setAllTasks","setEditing","setEditItem","editId","setEditId","show","alert","setAlert","showAlert","setItem","stringify","Helmet","name","content","updTask","updDay","newItem","uniqid","filter","specificItem","find","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.dce6a376.chunk.js","sourcesContent":["import { FaTimes } from \"react-icons/fa\";\r\nimport { FaRegEdit } from 'react-icons/fa';\r\n\r\n\r\nconst TodoItem = ({ item, onDelete, onEdit }) => {\r\n  const { id, task, day } = item\r\n  return (\r\n    <div className=\"item\" key={id}>\r\n     \r\n      <h3>{task}</h3>\r\n      <h4>{day}</h4>\r\n      <div className=\"controls\">\r\n      <FaRegEdit className=\"edit\" onClick={() => onEdit(id) } />\r\n      <FaTimes className=\"delete\" onClick={() => onDelete(id)} />\r\n     \r\n      </div>\r\n     \r\n      </div>\r\n      \r\n   \r\n   \r\n  )\r\n}\r\n\r\nexport default TodoItem","import React from 'react'\r\nimport TodoItem from './TodoItem'\r\n\r\nconst Todo = ({ allTasks, onDelete, onEdit, onRemove }) => {\r\n  return (\r\n    \r\n       <div className=\"wrapper\">\r\n         <h1 className=\"title\">Tasks</h1>\r\n    {allTasks.map((item) => <TodoItem key={item.id} item={item} onDelete={onDelete} onEdit={onEdit} />)}\r\n     {allTasks.length > 0 && <button className=\"btn clear\" onClick={onRemove}>Clear All Items</button>}\r\n      </div>\r\n\r\n    \r\n \r\n    \r\n  )\r\n}\r\n\r\nexport default Todo\r\n","import { useState, useEffect } from 'react'\r\n\r\nconst AddForm = ({ onAdd, editItem, editing }) => {\r\n\r\n  const [task, setTask] = useState('')\r\n  const [day, setDay] = useState('')\r\n\r\n\r\n\r\n\r\nuseEffect(() => {\r\n  const {task, day} = editItem;\r\n  setTask(task);\r\n  setDay(day);\r\n}, [editItem])\r\n\r\n\r\n\r\n\r\n  const handleAdd = (e) => {\r\n    e.preventDefault()\r\n    onAdd({task, day})\r\n    setTask('')\r\n    setDay('')\r\n  }\r\n\r\n\r\n\r\n  return (\r\n    <form onSubmit={handleAdd}>\r\n\r\n      <div className=\"form-control\">\r\n      <label>Task:\r\n      </label>\r\n      <input \r\n      type='text'\r\n      value={task}\r\n      onChange={(e) => setTask(e.target.value)}\r\n      />\r\n      \r\n      </div>\r\n\r\n      <div className=\"form-control\">\r\n      <label>Day & Time:\r\n      </label>\r\n      <input \r\n      type='text'\r\n      value={day}\r\n      onChange={(e) => setDay(e.target.value)}\r\n      />\r\n      \r\n      </div>\r\n\r\n    \r\n\r\n     \r\n\r\n\r\n        <button className=\"btn submit\">{editing ? 'Edit' : 'Submit'}</button>\r\n\r\n       \r\n\r\n\r\n      \r\n    \r\n    \r\n     \r\n    </form>\r\n  )\r\n}\r\n\r\nexport default AddForm","import { useEffect } from 'react'\r\nconst Alert = ({ msg, type, removeAlert, allItems }) => {\r\n  useEffect(() => {\r\n\r\n    const timeout = setTimeout(() => {\r\n      removeAlert();\r\n    }, 1500);\r\n    return () => clearTimeout(timeout);\r\n\r\n  }, [allItems])\r\n\r\n\r\n  return <div className=\"alert-box\">\r\n           <p className={type}>{msg}</p>\r\n          </div>\r\n}\r\n\r\nexport default Alert","import React from 'react'\nimport { useState, useEffect } from 'react'\nimport Todo from './Todo'\nimport AddForm from './AddForm'\nimport uniqid from 'uniqid';\nimport Alert from './Alert';\nimport {Helmet} from \"react-helmet\";\n\n\nconst getLocalStorage = () => {\n  let allTasks = localStorage.getItem('allTasks');\n  if (allTasks) {\n    return (allTasks = JSON.parse(localStorage.getItem('allTasks')));\n  } else {\n    return [];\n  }\n};\n\n\n\n\nconst App = () => {\n\n const [allTasks, setAllTasks] = useState(getLocalStorage());\n const [editing, setEditing] = useState(false);\n const [editItem, setEditItem] = useState({});\n const [editId, setEditId] = useState(null);\n const [alert, setAlert] = useState({ show: false, msg: '', type: '' });\n\n\nconst handleDelete = (id) => {\nsetAllTasks(allTasks.filter((item) => item.id !== id))\nshowAlert(true, 'deleting', 'item removed!');\n}\n\n\nconst handleEdit = (id) => {\n  setEditing(true);\n  const specificItem = allTasks.find((item) => item.id === id);\n  setEditId(id);\n  setEditItem(specificItem);\n \n\n}\n\n\nconst showAlert = (show = false, type = '', msg = '') => {\n  setAlert({ show, type, msg });\n};\n\n\nconst handleClearAll = () => {\n  setAllTasks([]);\n}\n\n\n\n\n\n\n const handleSubmit = ({task, day }) => {\n  let updTask = task;\n  let updDay = day\n\n  if(editing) {\n\n    setAllTasks(allTasks.map((item) => {\n      if(item.id === editId) {\n        return {id: editId, task: updTask, day: updDay};\n      } else {\n        return item\n      }\n    }))\n    setEditing(false)\n    setEditItem({})\n    setEditId(null)\n    showAlert(true, 'editing', 'item updated!');\n\n  \n\n   \n    \n   \n   \n \n\n  } else {\n\n\n    let newId = uniqid()\n    let newItem = { id: newId, task, day }\n    setAllTasks([...allTasks, newItem])\n    showAlert(true, 'success', 'item added!');\n\n\n\n  }\n  \n \n  \n }\n\n useEffect(() => {\n  localStorage.setItem('allTasks', JSON.stringify(allTasks));\n}, [allTasks]);\n\n\n  return (\n    <>\n       <Helmet>\n        <title>Task Tracker</title>\n        <meta name=\"description\" content=\"Task Tracker\" />\n    </Helmet>\n    <div className=\"container\">\n    <div className=\"wrap\">\n    \n\n    {alert.show && <Alert {...alert} removeAlert={showAlert} allTasks={allTasks} />}\n    \n      <AddForm onAdd={handleSubmit} editing={editing} editing={editing} editItem={editItem} editing={editing}/>\n      <Todo allTasks={allTasks} onDelete={handleDelete} onEdit={handleEdit} onRemove={handleClearAll}/>\n    </div>\n    </div>\n      \n    </>\n  )\n}\n\nexport default App\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\n"],"sourceRoot":""}